{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicog\\\\Desktop\\\\rick_and_morty\\\\src\\\\Components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport style from \"./Card.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  _s();\n  let {\n    id,\n    name,\n    species,\n    gender,\n    image,\n    onClose\n  } = _ref;\n  const [isFav, setIsFav] = useState(false);\n  const handleFavorite = () => {\n    if (isFav) {\n      setIsFav(false);\n      deleteFavorite(id);\n    } else {\n      setIsFav(true);\n      addFavorite({\n        id,\n        name,\n        species,\n        gender,\n        image,\n        onClose,\n        addFavorite,\n        deleteFavorite\n      });\n    }\n  };\n  useEffect(() => {\n    myFavorites.forEach(fav => {\n      if (fav.id === id) {\n        setIsFav(true);\n      }\n    });\n  }, [myFavorites]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.card,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Componente Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.closeButton,\n      onClick: () => onClose(id),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Nombre: \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Especie: \", species, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Genero: \", gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"P/ohr7L6r3Ai4GOhTgqo0B9M8uQ=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["style","jsxDEV","_jsxDEV","Card","_ref","_s","id","name","species","gender","image","onClose","isFav","setIsFav","useState","handleFavorite","deleteFavorite","addFavorite","useEffect","myFavorites","forEach","fav","className","card","children","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/nicog/Desktop/rick_and_morty/src/Components/Card/Card.jsx"],"sourcesContent":["import style from \"./Card.module.css\"\r\n\r\nconst Card = ( {id, name, species, gender, image, onClose} ) => {\r\n\r\n    const [isFav, setIsFav] = useState(false);\r\n\r\n   const handleFavorite = () => {\r\n      if(isFav){\r\n         setIsFav(false);\r\n         deleteFavorite(id);\r\n      } else {\r\n         setIsFav(true);\r\n         addFavorite({ \r\n            id,\r\n            name, \r\n            species, \r\n            gender, \r\n            image, \r\n            onClose, \r\n            addFavorite, \r\n            deleteFavorite\r\n         }\r\n         )\r\n      }\r\n   }\r\n   useEffect(() => {\r\n    myFavorites.forEach((fav) => {\r\n       if (fav.id === id) {\r\n          setIsFav(true);\r\n       }\r\n    })\r\n }, [myFavorites]);\r\n\r\n\r\n    return(\r\n        <div className={style.card} key={id} >\r\n            <h2>Componente Card</h2>\r\n            <button className={style.closeButton} onClick={() => onClose(id)}>X</button>\r\n            <h3>Nombre: {name} </h3>\r\n            <img src={image} alt={name} />\r\n            <h3>Especie: {species} </h3>\r\n            <h3>Genero: {gender}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,IAAI,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAjD;IAACC,EAAE;IAAEC,IAAI;IAAEC,OAAO;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAAP,IAAA;EAEtD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC1B,IAAGH,KAAK,EAAC;MACNC,QAAQ,CAAC,KAAK,CAAC;MACfG,cAAc,CAACV,EAAE,CAAC;IACrB,CAAC,MAAM;MACJO,QAAQ,CAAC,IAAI,CAAC;MACdI,WAAW,CAAC;QACTX,EAAE;QACFC,IAAI;QACJC,OAAO;QACPC,MAAM;QACNC,KAAK;QACLC,OAAO;QACPM,WAAW;QACXD;MACH,CAAC,CACA;IACJ;EACH,CAAC;EACDE,SAAS,CAAC,MAAM;IACfC,WAAW,CAACC,OAAO,CAAEC,GAAG,IAAK;MAC1B,IAAIA,GAAG,CAACf,EAAE,KAAKA,EAAE,EAAE;QAChBO,QAAQ,CAAC,IAAI,CAAC;MACjB;IACH,CAAC,CAAC;EACL,CAAC,EAAE,CAACM,WAAW,CAAC,CAAC;EAGd,oBACIjB,OAAA;IAAKoB,SAAS,EAAEtB,KAAK,CAACuB,IAAK;IAAAC,QAAA,gBACvBtB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxB1B,OAAA;MAAQoB,SAAS,EAAEtB,KAAK,CAAC6B,WAAY;MAACC,OAAO,EAAEA,CAAA,KAAMnB,OAAO,CAACL,EAAE,CAAE;MAAAkB,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC5E1B,OAAA;MAAAsB,QAAA,GAAI,UAAQ,EAACjB,IAAI,EAAC,GAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxB1B,OAAA;MAAK6B,GAAG,EAAErB,KAAM;MAACsB,GAAG,EAAEzB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9B1B,OAAA;MAAAsB,QAAA,GAAI,WAAS,EAAChB,OAAO,EAAC,GAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5B1B,OAAA;MAAAsB,QAAA,GAAI,UAAQ,EAACf,MAAM;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,GANItB,EAAE;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAO7B;AAEd,CAAC;AAAAvB,EAAA,CA1CKF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}